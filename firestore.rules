
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuth() {
      return request.auth != null;
    }

    function isAdmin() {
      // Check if the user document exists and has the 'Admin' role
      return isAuth() && get(/databases/$(database)/documents/employee/$(request.auth.uid)).data.role == 'Admin';
    }

    // Collection: employee
    // Employees can read their own profile and update it.
    // Admins can read/write any profile.
    match /employee/{userId} {
      allow read: if isAuth();
      allow create, delete: if isAdmin();
      allow update: if isAdmin() || (isAuth() && request.auth.uid == userId);
    }
    
    // Collection: attendance
    // Employees can create their own logs and read their own logs.
    // Admins can read, update, and delete any log.
    match /attendance/{logId} {
      allow read: if isAdmin() || (isAuth() && resource.data.employeeId == request.auth.uid);
      allow create: if isAuth() && request.resource.data.employeeId == request.auth.uid;
      allow update, delete: if isAdmin();
    }
    
    // Collection: absenceRequests
    // Employees can create their own requests and read their own requests.
    // Admins can read, update, and delete any request.
    match /absenceRequests/{reqId} {
      allow read: if isAdmin() || (isAuth() && resource.data.employeeId == request.auth.uid);
      allow create: if isAuth() && request.resource.data.employeeId == request.auth.uid;
      allow update, delete: if isAdmin();
    }

    // Business-logic collections (projects, objectives, etc.)
    // Only Admins should have write access to these core business collections.
    // Authenticated users can read them (e.g., for an employee to see their objectives).
    match /{collection}/{docId}
      where collection in ['projects', 'objectives', 'tasks', 'incentives'] {
        allow read: if isAuth();
        allow write: if isAdmin();
    }
    
    // Settings collections
    // Only Admins can read or write any configuration.
     match /{settingCollection}/{settingId} 
      where settingCollection in ['roles', 'centers', 'departments', 'breaks', 'clockInTypes', 'shifts', 'flexibleSchedules', 'fixedSchedules', 'absenceTypes', 'calendars', 'vacationPolicies'] {
        allow read, write: if isAdmin();
    }
  }
}
