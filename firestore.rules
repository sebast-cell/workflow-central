rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an Admin
    function isAdmin(userId) {
      return exists(/databases/$(database)/documents/employee/$(userId)) &&
             get(/databases/$(database)/documents/employee/$(userId)).data.role == 'Admin';
    }

    // -- Employee Collection: Profile Data --
    // Anyone authenticated can read employee profiles (for lists, etc.)
    // Only Admins can create, update, or delete employees.
    match /employee/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }
    
    // -- Absence Requests: Personal Data --
    match /absenceRequests/{requestId} {
      // Allow read if user is Admin OR if they are the owner of the request.
      allow read: if request.auth != null && (isAdmin(request.auth.uid) || resource.data.employeeId == request.auth.uid);
      // Allow create only if the user is creating a request for themselves.
      allow create: if request.auth != null && request.resource.data.employeeId == request.auth.uid;
      // Only Admins can update (approve/reject) or delete requests.
      allow update, delete: if request.auth != null && isAdmin(request.auth.uid);
    }

    // -- Attendance Logs: Personal Data --
    match /attendance/{logId} {
       // Allow read if user is Admin OR if they are the owner of the log.
      allow read: if request.auth != null && (isAdmin(request.auth.uid) || resource.data.employeeId == request.auth.uid);
      // Allow create only if the user is creating a log for themselves.
      allow create: if request.auth != null && request.resource.data.employeeId == request.auth.uid;
       // Only Admins can update or delete logs.
      allow update, delete: if request.auth != null && isAdmin(request.auth.uid);
    }

    // -- Business-level Data (Projects, Objectives, Tasks, etc.) --
    // For these collections, any authenticated user can read, but only Admins can write.
    // This is a secure default for company-wide information.
    match /projects/{projectId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }
    
    match /objectives/{objectiveId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }

    match /tasks/{taskId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }

    match /incentives/{incentiveId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }
    
    // -- Settings Collections --
    // Only Admins should be able to read or write any settings.
    match /settings/{collection}/{docId} {
      allow read, write: if request.auth != null && isAdmin(request.auth.uid);
    }
  }
}
